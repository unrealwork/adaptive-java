Index: src/main/java/org/stepik/jetbrains/adaptive/java/basic/Grades.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/org/stepik/jetbrains/adaptive/java/basic/Grades.java	(date 1513412030000)
+++ src/main/java/org/stepik/jetbrains/adaptive/java/basic/Grades.java	(date 1513412030000)
@@ -0,0 +1,22 @@
+package org.stepik.jetbrains.adaptive.java.basic;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+
+public class Grades {
+
+  public static void main(String[] args) throws IOException {
+    BufferedReader reader = new BufferedReader(
+        new InputStreamReader(System.in));
+    int[] grades = new int[4];
+    int size = Integer.parseInt(reader.readLine());
+    for (int i = 0; i < size; i++) {
+      int grade = Integer.parseInt(reader.readLine());
+      grades[grade - 2]++;
+    }
+    for (Integer count : grades) {
+      System.out.printf("%d ", count);
+    }
+  }
+}
Index: src/main/java/org/stepik/jetbrains/adaptive/java/basic/RootsOfEquation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/org/stepik/jetbrains/adaptive/java/basic/RootsOfEquation.java	(date 1513413188000)
+++ src/main/java/org/stepik/jetbrains/adaptive/java/basic/RootsOfEquation.java	(date 1513413188000)
@@ -0,0 +1,31 @@
+package org.stepik.jetbrains.adaptive.java.basic;
+
+import java.util.Scanner;
+
+public class RootsOfEquation {
+
+  private static long polynom(int[] coefficients, int x) {
+    long result = 0;
+    long poweredX = 1;
+    int lastIndex = coefficients.length - 1;
+    for (int i = lastIndex; i >= 0; i--) {
+      result += (poweredX * coefficients[i]);
+      poweredX *= x;
+    }
+    return result;
+  }
+
+  public static void main(String[] args) {
+    Scanner in = new Scanner(System.in);
+    int[] coef = new int[4];
+    for (int i = 0; i < 4; i++) {
+      coef[i] = in.nextInt();
+    }
+
+    for (int i = 0; i < 1000; i++) {
+      if (polynom(coef, i) == 0) {
+        System.out.println(i);
+      }
+    }
+  }
+}
Index: src/main/java/org/stepik/jetbrains/adaptive/java/basic/SumOfIntegers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/org/stepik/jetbrains/adaptive/java/basic/SumOfIntegers.java	(date 1513412320000)
+++ src/main/java/org/stepik/jetbrains/adaptive/java/basic/SumOfIntegers.java	(date 1513412320000)
@@ -0,0 +1,15 @@
+package org.stepik.jetbrains.adaptive.java.basic;
+
+import java.util.Scanner;
+
+public class SumOfIntegers {
+
+  public static void main(String[] args) {
+    Scanner in = new Scanner(System.in);
+    int start = in.nextInt();
+    int end = in.nextInt();
+
+    long sum = (end - start + 1) * (end + start) / 2;
+    System.out.println(sum);
+  }
+}
